#include "bnn.h"
#include <stdio.h>


void verify_output(string name, const int golden[10], int predicted[10], const int golden_layer1[128], const int golden_layer2[64], int predicted_layer1[128], int predicted_layer2[64]){
    cout<<"-----------------------------------------------------------"<<endl;
	cout<<"Verifying the sample: "<<name<<endl;
    int PASS = 1;
	for(int i=0;i<10;i++) {
		if (golden[i]!=predicted[i]) {
			PASS=0;
			cout<<"Wrong output: Expected: "<<golden[i]<<" Obtained: "<<predicted[i]<<endl;
		}
	}

	for(int i=0;i<128;i++) {
			if (golden_layer1[i]!=predicted_layer1[i]) {
				PASS=0;
				cout<<"Wrong output in layer 1 activations." <<endl;
				break;
			}
		}


	for(int i=0;i<64;i++) {
			if (golden_layer2[i]!=predicted_layer2[i]) {
				PASS=0;
				cout<<"Wrong output in layer 2 activations." <<endl;
				break;
			}
		}


	if(PASS==0) {
		cout<<"Sample: "<<name<<" FAILED"<<endl;
	} else {
		cout<<"Sample: "<<name<<" PASSED"<<endl;
	}

}

int main ()
{
    const unsigned int sample1[25] ={4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
    	       4294967295, 4290838527, 4227859455, 3221241855, 3758358527,
    	       4232052735, 2281701368, 2147483407, 4294963455, 4294844415,
    	       4293132287, 4232052735, 2281701360, 2147483407, 4294959359,
    	       4294844415, 4290904063, 4229955583, 3288334335, 4294901760};




    const int sample1_layer1_activations[128] = {-30, 18, -44, 70, 20, 32, -58, -58, 70, -52, -22, 20, 66, -8, -8, -22, 0, -26, -36, -80, 14, -32, 16, 38, -48, 2, -2, -40, 24, -28, 6, 22, 62, 54, -2, 78, 48, -56, -52, -30, -16, -52, 32, -96, -46, -60, -52, -10, -52, 88, -16, 42, -64, -20, 44, 52, 72, -48, 68, 16, 74, -8, 60, -62, -38, 84, 12, -38, 90, -64, 2, 44, -20, -42, 54, 62, -2, 74, 16, 80, 114, -90, -36, -6, -46, 26, -32, -34, -4, 58, -28, -8, -38, -70, -92, -22, 62, -42, 38, 0, -14, 12, -16, -42, 68, 22, -16, 44, 20, 84, -124, 40, -46, -62, -18, -42, -2, 94, 20, 38, 6, -114, 44, -14, 56, -90, 56, -44};


    const int sample1_layer2_activations[64] = {4, 10, -16, 18, -16, -10, 2, 24, -22, -10, -4, -2, -12, 20, -24, 6, 0, -28, 10, -14, 4, 10, 18, 16, -16, 28, -26, 8, -6, -18, 22, -24, 22, 22, 6, 14, -22, 2, 6, -32, -10, -10, 22, -24, 12, -8, -14, -2, -2, -20, -4, -16, -30, -22, 18, -30, -10, -4, 0, -18, -12, -30, -30, -6};




    // true label: 7
    const int sample1_golden_output[10] = {-2,   4,  -8,  14,  -4,   0, -42,  48,  -4,   2};

    const unsigned int sample2[25] ={4294967295, 4294967295, 4294967292,  134217600, 1073737731,
    	       4294837311, 4292985855, 4282138623, 4286840831, 4034920447,
    	        268435424, 4294966303, 4294951935, 4294459391, 4278714367,
    	       4034920447,  268435440,   67239680,    2093056,   33521671,
    	       4294967295, 4294967295, 4294967295, 4294967295, 4294901760};

    const int sample2_layer1_activations[128] = {-36, 8, 134, -16, 30, 54, 72, -8, -76, 6, -4, -110, -40, -118, 86, 40, -82, 56, -50, -54, -96, 50, -42, -12, -18, 8, 40, 122, 34, -90, 152, 116, 20, -48, -120, 36, 30, 2, -86, 4, -58, -42, -54, 38, -20, 22, -58, 28, -26, -22, 14, -36, -74, 34, -10, 78, 70, 54, 42, 66, -8, 110, -10, -20, -72, -10, -130, -68, 92, -22, 48, 94, 82, 28, -60, -84, -12, 20, -66, -26, 68, -8, 54, 44, 84, 104, 50, -28, 82, -28, 22, 58, 96, -36, -50, -128, 36, 36, 20, 42, 8, 22, 30, 60, 10, 52, 90, 70, -86, -70, 14, -42, -24, 4, 24, -32, 72, 0, -10, 32, -64, -72, -22, -36, 38, -48, -34, 14};


    const int sample2_layer2_activations[64] = {-28, -2, 24, -10, -28, 14, -38, -8, -14, 14, 8, -2, -16, 32, -28, 6, 28, -8, 10, 22, 40, -30, 14, 20, -12, 8, 30, -24, 10, 22, 10, 16, 6, 10, 14, -38, -6, -2, -22, 36, 14, 18, -2, 8, -40, -20, 30, 2, 18, -4, -20, 20, -2, 10, -26, -22, 18, -12, 12, 34, 36, -2, 6, 58};



     // true label:2
    const int sample2_golden_output[10] = {2,   0,  48,  10, -20,   4,   2, -16,   4, -14};

    const unsigned int sample3[25] ={4294967295, 4294967295, 4294967295, 4294967295,  536870897,
    	       4294967103, 4294960127, 4294852607, 4293132287, 4236247039,
    	       3355443196, 2147483527, 4294965503, 4294938623, 4294049791,
    	       4280287231, 4060086271,  536870881, 4294966815, 4294951935,
    	       4294721535, 4294967295, 4294967295, 4294967295, 4294901760};

    const int sample3_layer1_activations[128] = {14, -30, 56, -6, 64, 12, -10, -22, -42, -8, 38, -28, -26, -64, -4, -14, -24, -10, -16, -48, -46, -28, -4, -22, -40, 2, -2, 4, 8, -32, 42, 2, 30, 2, -74, 6, -20, 8, 20, -10, -56, -40, 12, 36, 42, 4, -32, -30, -64, 80, -8, 22, -100, 0, 0, 68, 108, 12, 40, -16, 70, 4, -12, -14, 14, 16, -60, -58, 114, -4, 6, 24, 80, 22, -14, -6, -18, 30, -36, 84, 18, -14, -20, 22, 14, 66, 24, -46, -16, -10, -24, -28, 6, -94, -64, -38, 30, -42, 6, 8, -46, -36, -36, 18, -8, 50, 0, 48, -64, 16, -32, -4, -14, 18, -38, -18, 30, 18, 40, -2, 18, 2, 24, -58, -12, -86, -12, -52};

    const int sample3_layer2_activations[64] = {10, -24, 6, 0, 14, -12, -28, -26, -4, 8, 18, 8, -22, -2, -2, 12, 6, -6, 8, -12, 14, -4, 8, 2, -2, -18, -8, 6, -28, 0, -12, -10, 8, 0, -4, -12, -12, -4, -4, 6, -16, -4, 24, 26, 14, -6, 0, -28, 8, -10, 14, 14, 20, -8, -28, 12, -8, -26, -18, -4, -14, 12, 28, 0};


    // true label:1
    const int sample3_golden_output[10] = {-16,  42,   2,   4,  -2, -14,   8,   2,  14,  -8};


	ITYPE out1[10];
	ITYPE out2[10];
	ITYPE out3[10];
	for(int i=0;i<10;i++) {
		out1[i] = 0;
		out2[i] = 0;
		out3[i] = 0;
	}

	ITYPE sample1_layer1[128];
	ITYPE sample1_layer2[64];
	ITYPE sample2_layer1[128];
	ITYPE sample2_layer2[64];
	ITYPE sample3_layer1[128];
	ITYPE sample3_layer2[64];

	for(int i=0;i<128;i++) {
		sample1_layer1[i] = 0;
		sample2_layer1[i] = 0;
		sample3_layer1[i] = 0;
	}

	for(int i=0;i<64;i++) {
		sample1_layer2[i] = 0;
		sample2_layer2[i] = 0;
		sample3_layer2[i] = 0;
	}



	bnn(sample1, out1, sample1_layer1, sample1_layer2);
	bnn(sample2, out2, sample2_layer1, sample2_layer2);
	bnn(sample3, out3, sample3_layer1, sample3_layer2);

	verify_output("Sample 1", sample1_golden_output, out1, sample1_layer1_activations, sample1_layer2_activations, sample1_layer1, sample1_layer2);
	verify_output("Sample 2", sample2_golden_output, out2, sample2_layer1_activations, sample2_layer2_activations, sample2_layer1, sample2_layer2);
	verify_output("Sample 3", sample3_golden_output, out3, sample3_layer1_activations, sample3_layer2_activations, sample3_layer1, sample3_layer2);


	return 0;

}

